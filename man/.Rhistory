PB.unexplained=PB.ri; PB.explained=PB.ri.explained; PB.overall=PB.ri.overall;
pct.obs=c(pct.obs.r1,pct.obs.ri);
pct.est=c(pct.est.r1,pct.est.ri);
pct.PB.vec=pct.ri.exp;
if(method!=0){
wtTD.conty=as.vector(wtTD.ri.conty);
PB.unexplained.conty=PB.ri.conty;PB.explained.conty=PB.ri.explained.conty;PB.overall.conty= PB.ri.overall.conty
pct.PB.conty=pct.ri.exp.conty
}
}
if (i>2) {
wtTD=cbind(wtTD,wtTD.ri);
PB.unexplained=c(PB.unexplained,PB.ri);PB.explained=c(PB.explained,PB.ri.explained);PB.overall=c(PB.overall,PB.ri.overall);
pct.obs=c(pct.obs,pct.obs.ri);
pct.est=c(pct.est,pct.est.ri);
pct.PB.vec=c(pct.PB.vec,pct.ri.exp);
if(method!=0){
wtTD.conty= cbind(wtTD.conty,as.vector(wtTD.ri.conty));
PB.unexplained.conty=c(PB.unexplained.conty,PB.ri.conty);
PB.explained.conty=c(PB.explained.conty,PB.ri.explained.conty);PB.overall.conty=c(PB.overall.conty,PB.ri.overall.conty);
pct.PB.conty=c(pct.PB.conty,pct.ri.exp.conty)
}
}
}  #end i>1
}#end i loop
PB.unexplain=t(matrix(PB.unexplained,,ngroup.outcome-1,byrow=T))
PB.explain=t(matrix(PB.explained,,ngroup.outcome-1,byrow=T))
PB.ovll=t(matrix(PB.overall,,ngroup.outcome-1,byrow=T))
pct.obs=t(matrix(pct.obs,,ngroup.outcome-1,byrow=T))
pct.est=t(matrix(pct.est,,ngroup.outcome-1,byrow=T))
colnames(PB.unexplain)=  colnames(PB.explain)=  colnames(PB.ovll)=sapply(2:(ncat.race),function (i) paste("Race1-Race",i))
rownames(PB.unexplain)=  rownames(PB.explain)=  rownames(PB.ovll)=sapply(2:(ngroup.outcome),function (i) paste("outcome",i))
PB.vec=rbind(PB.unexplain,PB.explain,PB.ovll)
if (method!=0) {PB.conty=as.matrix(rbind(PB.unexplained.conty,PB.explained.conty,PB.overall.conty))
colnames(PB.conty)=sapply(2:(ncat.race),function (i) paste("Race1-Race",i)) }
if (method==0) lable="linear regression analysis"
if (method==1) lable="multinomial logistic analysis"
if (method==2) lable="cumulative logistic analysis"
n.strat=nlevels(as.factor(strat))
n.psu=sapply(1:n.strat, function(k) nlevels(as.factor(psu[strat==k])))
var.cs=var.samp(wtTD,n.strat,n.psu)
if (method!=0) var.cs.conty=var.samp(wtTD.conty,n.strat,n.psu)
list(logit.r1=RegEst,method=lable,
pct.est=pct.est,pct.obs=pct.obs,
PB=PB.vec, wtTD=wtTD,
var.cs=var.cs, pctExplain.PB=pct.PB.vec)
#if (method!=0) ls=list(logit.r1=logit.r1,method=lable,
#     pct.est=pct.est,pct.obs=pct.obs,
#   PB=PB.vec, PB.score=PB.conty,
#  wtTD=wtTD, wtTD.conty=wtTD.conty,
# var.cs=var.cs, var.cs.conty=var.cs.conty,
#pctExplain.PB=pct.PB.vec, pctExplain.PB.conty=pct.PB.conty)
}#end function PBest.TD.logit
zi = function(i,w,deltaR1,y,psi,dpsidtheta,depsdtheta,depsdwi){
dthetadwi = -depsdwi%*%ginv(depsdtheta)
term1 = (-1/sum(w*deltaR1))*(deltaR1[i]*(y[i]-psi[i])- sum(dthetadwi*(apply(t(dpsidtheta),1,function(row){sum(w*deltaR1*row)}))))
term2 = -(deltaR1[i]/(sum(w*deltaR1)^2))*sum(w*deltaR1*(y-psi))
return(term1 + term2)
}
zi_linear = function(y,y.med,race.cat,cov.x,strat,psu,wt){
method = 0
n=length(y)
n.race=table(race.cat)
ncat.race=nlevels(as.factor(race.cat))
race.dummy= matrix(0,n,ncat.race)
for (j in (1:n)) {race.dummy[j,race.cat[j]]=1}
samp=data.frame(cbind(y,race.dummy,race.cat,cov.x,strat,psu,wt))
ngroup.outcome=2
if (method!=0) {
#method=0: continus outcome
ngroup.outcome=nlevels(as.factor(y))
y.dummy=matrix(0,n,(ngroup.outcome))
for (j in (1:n)) y.dummy[j,samp$y[j]]=1
samp$y.dummy=y.dummy[,1:(ngroup.outcome-1)]              ###refgroup
}
id=order(samp$race.cat)
samp.sort<<- samp[id,]
#-------------------PB estimators-------------------
for (i in 1:2){
samp.ri=samp.sort[samp.sort$race.cat==i,]
x.design.ri=cov.x[id,][samp.sort$race.cat==i,]
if (i==1) {
samp.r1=samp.ri
x.design.r1=x.design.ri
if (method==0) {
linear.r1=glm(samp.r1$y~.,data=data.frame(x.design.r1),weights=samp.r1$wt);RegEst=linear.r1
coef.r1=coef(linear.r1)
dim.theta<<-length(coef.r1)
beta.ri=as.vector(coef.r1)
y.hat.r1=coef.r1%*%t(cbind(1,x.design.r1))
D.yhat.theta.r1=linear.D.yhat.theta(as.matrix(y.hat.r1),x.design.r1)
TD.theta.mat=wtTD.theta(D.yhat.theta.r1,as.matrix(samp.r1$y),matrix(y.hat.r1,,1),x.design.r1,dim.theta,samp.r1$wt)
pct.obs.r1=sum(samp.r1$wt*samp.r1$y)/sum(samp.r1$wt)  #observed white
pct.est.r1=sum(samp.r1$wt*y.hat.r1)/sum(samp.r1$wt)  #estimated minority
}
if (method==1) {
logit.r1=multinom(samp.r1$y~.,data=data.frame(x.design.r1),weights=samp.r1$wt,);RegEst=logit.r1
coef.r1=coef(logit.r1);
dim.theta<<-length(coef.r1)
beta.ri=as.vector(coef.r1)
p.hat.r1.top= exp(coef.r1%*%t(cbind(1,x.design.r1)))
p.hat.r10=t(p.hat.r1.top)/(apply(p.hat.r1.top,2,sum)+1) #give column 2&3 and the first outcome group is the reference group
p.hat.r1=as.matrix(cbind(1-apply(p.hat.r10,1,sum),p.hat.r10))[,-ngroup.outcome]
#give column 2&3 and the first outcome group is the reference group
D.p.theta.r1=genLogit.D.p.theta(as.matrix(p.hat.r1),x.design.r1)
TD.theta.mat=wtTD.theta(D.p.theta.r1,samp.r1$y.dummy,as.matrix(p.hat.r1),x.design.r1,dim.theta,samp.r1$wt)
pct.obs.r1=sapply(1:(ngroup.outcome-1), function(tmp) sum(samp.r1$wt*(as.matrix(samp.r1$y.dummy)[,tmp]))/sum(samp.r1$wt))  #observed white
pct.est.r1=sapply(1:(ngroup.outcome-1), function(tmp) sum(samp.r1$wt*(as.matrix(p.hat.r1)[,tmp]))/sum(samp.r1$wt))  #estimated minority
}
if (method==2) {
logit.r1=polr(factor(samp.r1$y)~., data=data.frame(-x.design.r1),weights=samp.r1$wt/mean(samp.r1$wt));RegEst=logit.r1
alpha.hat.r1=sapply(1:(ngroup.outcome-1),function(i) sum(logit.r1$zeta[i:(ngroup.outcome-1)]))
coef.r1=c(logit.r1$zeta,logit.r1$coef)
dim.theta<<-length(coef.r1)
beta.r1=as.vector(coef.r1)
F.hat.r1.top=sapply(1:(ngroup.outcome-1), function(j) exp(logit.r1$zeta[j]+logit.r1$coef%*%t(cbind(x.design.ri))))
F.hat.r1=(F.hat.r1.top/(F.hat.r1.top+1))[,1:(ngroup.outcome-1)] #give column 1&2
p.hat.r1=logit.r1$fitted.values[,1:(ngroup.outcome-1)]
D.p.theta.r1=cumLogit.D.p.theta(F.hat.r1,x.design.r1)
TD.theta.mat=wtTD.theta(D.p.theta.r1,samp.r1$y.dummy,as.matrix(p.hat.r1),x.design.r1,dim.theta,samp.r1$wt)
pct.obs.r1=sapply(1:(ngroup.outcome-1), function(tmp) sum(samp.r1$wt*(as.matrix(samp.r1$y.dummy)[,tmp]))/sum(samp.r1$wt))  #observed white
pct.est.r1=sapply(1:(ngroup.outcome-1), function(tmp) sum(samp.r1$wt*(as.matrix(p.hat.r1)[,tmp]))/sum(samp.r1$wt))  #estimated minority
}
} #end reference race group i=1
wtTD.ri=matrix(0,n,ngroup.outcome-1)
if (i>1) {
if (method==0) {
p.hat.ri=coef.r1%*%t(cbind(1,x.design.ri))
D.p.theta.ri=linear.D.yhat.theta(as.matrix(y.hat.ri),x.design.ri)
pct.est.ri=sum(samp.ri$wt*p.hat.ri)/sum(samp.ri$wt)
pct.obs.ri=sum(samp.ri$wt*samp.ri$y)/sum(samp.ri$wt)
}
if (method==1) {
p.hat.ri.top= exp(coef.r1%*%t(cbind(1,x.design.ri)))
p.hat.ri0=t(p.hat.ri.top)/(apply(p.hat.ri.top,2,sum)+1)  #give column 2&3 and the first outcome group is the reference group
p.hat.ri=as.matrix(cbind(1-apply(p.hat.ri0,1,sum),p.hat.ri0))[,-ngroup.outcome]
#give column 2&3 and the first outcome group is the reference group
###refgroup
D.p.theta.ri=genLogit.D.p.theta(as.matrix(p.hat.ri),x.design.ri)
pct.est.ri=sapply(1:(ngroup.outcome-1), function(i) sum(samp.ri$wt*(as.matrix(p.hat.ri)[,i]))/sum(samp.ri$wt))  #estimated minority
pct.obs.ri=sapply(1:(ngroup.outcome-1), function(i) sum(samp.ri$wt*(as.matrix(samp.ri$y.dummy)[,i]))/sum(samp.ri$wt))  #observed minority
}
if (method==2) {
F.hat.ri.top=sapply(1:(ngroup.outcome-1), function(j)
exp(logit.r1$zeta[j]+logit.r1$coef%*%t(cbind(x.design.ri))))
F.hat.ri=F.hat.ri.top/(F.hat.ri.top+1)
p.hat.ri=F.hat.ri
p.hat.ri[,2:(ngroup.outcome-1)]=sapply(2:(ngroup.outcome-1),function(j)
F.hat.ri[,j]-F.hat.ri[,j-1])
D.p.theta.ri=cumLogit.D.p.theta(F.hat.ri,x.design.ri)
pct.est.ri=sapply(1:(ngroup.outcome-1), function(i) sum(samp.ri$wt*(as.matrix(p.hat.ri)[,i]))/sum(samp.ri$wt))  #estimated minority
pct.obs.ri=sapply(1:(ngroup.outcome-1), function(i) sum(samp.ri$wt*(as.matrix(samp.ri$y.dummy)[,i]))/sum(samp.ri$wt)) #observed minority
}
PB.ri=pct.est.ri-pct.obs.ri       		#	estimated minority - observed minority
PB.ri.explained=pct.obs.r1-pct.est.ri    	#	observed white- estimated minority
PB.ri.overall=pct.obs.r1-pct.obs.ri   	#	observed white - observed minority
pct.ri.exp=PB.ri.explained/PB.ri.overall
if(method!=0) {
PB.ri.conty=(y.med-y.med[ngroup.outcome])[-ngroup.outcome] %*%PB.ri
PB.ri.explained.conty=(y.med-y.med[ngroup.outcome])[-ngroup.outcome] %*%PB.ri.explained
PB.ri.overall.conty=(y.med-y.med[ngroup.outcome])[-ngroup.outcome] %*%PB.ri.overall
pct.ri.exp.conty=PB.ri.explained.conty/PB.ri.overall.conty
}
varname<- paste('pct.est.r',i,sep="")
assign(varname,pct.est.ri)
varname<- paste('pct.obs.r',i,sep="")
assign(varname,pct.obs.ri)
varname<- paste('PB.r',i,sep="")
assign(varname,PB.ri)
varname<- paste('PB.explained.r',i,sep="")
assign(varname,PB.ri.explained)
varname<- paste('PB.overall.r',i,sep="")
assign(varname,PB.ri.overall)
varname<- paste('pct.explained.r',i,sep="")
assign(varname,pct.ri.exp)
if (method==0) tmp.r1ri=TD.PB(TD.theta.mat,D.p.theta.ri,samp.ri$wt,as.matrix(samp.ri$y),matrix(p.hat.ri,,1),x.design.ri)
if (method!=0) tmp.r1ri=TD.PB(TD.theta.mat,D.p.theta.ri,samp.ri$wt,as.matrix(samp.ri$y.dummy),as.matrix(p.hat.ri),x.design.ri)
wtTD.ri[1:n.race[1],]=tmp.r1ri$TD.r1
wtTD.ri[(sum(n.race[1:(i-1)])+1):sum(n.race[1:i]),]=matrix(tmp.r1ri$TD.rk,,1)
varname <- paste('wtTD.r',i,sep="")
assign(varname, wtTD.ri) # assign the variable to a new name according to the race group
if (method!=0) {
wtTD.ri.conty=(y.med-y.med[ngroup.outcome])[-ngroup.outcome] %*% t(wtTD.ri)
varname<-paste('wtTD.conty.r',i,sep="")
assign(varname,wtTD.ri.conty)
}
if (i==2) {
wtTD=wtTD.ri;
PB.unexplained=PB.ri; PB.explained=PB.ri.explained; PB.overall=PB.ri.overall;
pct.obs=c(pct.obs.r1,pct.obs.ri);
pct.est=c(pct.est.r1,pct.est.ri);
pct.PB.vec=pct.ri.exp;
if(method!=0){
wtTD.conty=as.vector(wtTD.ri.conty);
PB.unexplained.conty=PB.ri.conty;PB.explained.conty=PB.ri.explained.conty;PB.overall.conty= PB.ri.overall.conty
pct.PB.conty=pct.ri.exp.conty
}
}
if (i>2) {
wtTD=cbind(wtTD,wtTD.ri);
PB.unexplained=c(PB.unexplained,PB.ri);PB.explained=c(PB.explained,PB.ri.explained);PB.overall=c(PB.overall,PB.ri.overall);
pct.obs=c(pct.obs,pct.obs.ri);
pct.est=c(pct.est,pct.est.ri);
pct.PB.vec=c(pct.PB.vec,pct.ri.exp);
if(method!=0){
wtTD.conty= cbind(wtTD.conty,as.vector(wtTD.ri.conty));
PB.unexplained.conty=c(PB.unexplained.conty,PB.ri.conty);
PB.explained.conty=c(PB.explained.conty,PB.ri.explained.conty);PB.overall.conty=c(PB.overall.conty,PB.ri.overall.conty);
pct.PB.conty=c(pct.PB.conty,pct.ri.exp.conty)
}
}
}  #end i>1
}#end i loop
print(t(p.hat.ri)[1:10])
print(dim(race.dummy))
deltaR1 = race.dummy[,2]
deltaR0 = race.dummy[,1]
print(sum(deltaR0))
psi = rep(0,n)
psi[deltaR1==1] = t(p.hat.ri)
print(psi)
print(sum(psi))
print(sum(t(D.p.theta.ri)))
}
rm(list=ls())
library(nnet)
library(survey)
method = 2
wquantile <- function( v, w, p )
{
v <- v[order(v)]
w <- w[order(v)]
v [ which.max( cumsum(w) / sum(w) >= p ) ]
}
###set working directory
#setwd("C:/Users/laffertyrm/Documents/work/PB")
##############################
source("C:/Users/laffertyrm/Documents/work/PB/subfunctions.PB v3 refgrp last 0912.r")
data.examp=read.table(file="C:/Users/laffertyrm/Documents/work/PB/variables_no_missing.txt",header=T)
data.examp0=data.examp
dim(data.examp0)
#reorder data by race
race.recode=data.examp0$race-1
race.recode[which(race.recode==0)]=race.recode[which(race.recode==0)]+3 #considering all three race groups
data.examp0$race=race.recode    ###white, black, hist
data.examp1=data.examp0[order(data.examp0$race),]
#variables
y0=data.examp1$BMXBMI
y=ifelse(y0>=30,1,0)
race.cat=data.examp1$race #race (1=white; 2=black; 3=hispanic)
age=data.examp1$RIDAGEYR
age_square=age*age
pir=data.examp1$INDFMPIR
insurance=data.examp1$HID010
phy.act=data.examp1$mets_sum
alc.consump=data.examp1$num_drk_pwk
smoke2=data.examp1$smoke2
smoke3=data.examp1$smoke3
wt=data.examp1$samplwt
strat=data.examp1$SDMVSTRA
psu= data.examp1$SDMVPSU
xtabs(~strat+psu)
# collapse to have >1 psu's in each stratum (??)
psu[strat==38]=3; strat[strat==38]=37
xtabs(~strat+psu)
n.strat=nlevels(as.factor(strat))
n.psu=sapply(1:n.strat, function(k) nlevels(as.factor(psu[strat==k]))) # num of PSUs within strat
ngroup.outcome=2
n.race=table(race.cat)
ncat.race=nlevels(as.factor(race.cat))
#y.med<-sapply(1:ngroup.outcome, function(j) wquantile(data.examp1$BMXBMI[y==j],wt[y==j],0.5))
#characteristics of covariates
cov.x=cbind(age,age_square,pir,insurance,phy.act,alc.consump,smoke2,smoke3)
boxplot(age~race.cat, col="lightgray",main="Age Distribution by Race",xlab="Race",ylab="Age")
boxplot(phy.act~race.cat, col="lightgray",main="Distribution of total amount of leisure-time physical activity by Race",xlab="Race",ylab="total amount of leisure-time physical activity")
boxplot(pir~race.cat, col="lightgray",main="PIR Distribution by Race",xlab="Race",ylab="PIR")
boxplot(alc.consump~race.cat, col="lightgray",main="Distribution of number of drinks alcohol per week by Race",xlab="Race",ylab="number of drinks alcohol per week")
sapply(1:3, function (i) quantile(phy.act[race.cat==i]))
sapply(1:3, function (i) quantile(alc.consump[race.cat==i]))
xtabs(~race.cat+insurance)
xtabs(~race.cat+smoke2)
xtabs(~race.cat+smoke3)
###############
#Table C.II (linear)
observed.py=matrix(sapply( 1:ncat.race, function (j)
sum(wt[race.cat==j]*y0[race.cat==j])/sum(wt[race.cat==j])
),1,)
colnames(observed.py)=c('white','black','hist')
rownames(observed.py)=c('mean')
##observed mean BMI
observed.py;
##predicted mean
white.data=data.frame(cbind(y0,cov.x,wt,strat,psu)[race.cat==1,])
ds=svydesign(ids=~psu,strata=~strat,data=white.data,weights=~wt,nest=T)
glm.wt=svyglm(y0~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
coeff=summary(glm.wt)$coeff[,1]
#expected BMI for black
out2=as.matrix(cbind(1,cov.x)[race.cat==2,])%*% as.matrix(coeff)
out2.wt=sum(wt[race.cat==2]*out2)/sum(wt[race.cat==2])
#unexplained disparity for black
U2=out2.wt-observed.py[2]
#expected BMI for hispanic
#unexplained disparity for hispanic
out3=as.matrix(cbind(1,cov.x)[race.cat==3,])%*% as.matrix(coeff)
out3.wt=sum(wt[race.cat==3]*out3)/sum(wt[race.cat==3])
U3=out3.wt-observed.py[3]
######################################
# glm.nowt=glm(y0[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],)
summary(glm.wt)$coeff[,1]
################
observed.py=matrix(sapply( 1:ncat.race, function (j)
sum(wt[race.cat==j]*y[race.cat==j])/sum(wt[race.cat==j])
),1,)
colnames(observed.py)=c('white','black','hist')
rownames(observed.py)=c('mean')
overall.PB=observed.py[,1] - observed.py    #observed -observed
observed.py; overall.PB
white.data=data.frame(cbind(y,cov.x,wt,strat,psu)[race.cat==1,])
xtabs(~white.data$strat+white.data$psu)
permut.id=order(white.data$strat,white.data$psu)
white.data=white.data[permut.id,]
ds=svydesign(ids=~psu,strata=~strat,data=white.data,weights=~wt,nest=T)
#######################
#for linear
glm.wt=svyglm(y0~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
glm.nowt=glm(y0[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],)
summary(glm.wt); summary(glm.nowt)
##############
#for binary
glm.wt=svyglm(y~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
glm.nowt=glm(y[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],family="binomial")
summary(glm.wt); summary(glm.nowt)
#for binary
PB.TD=PBest.TD.logit(y,y.med=NULL,race.cat,cov.x,strat,psu,wt,method)  #######CODE FAILS HERE --- SEE SUBFUNCTIONS
PB.vec=as.matrix(PB.TD$PB)
rownames(PB.vec)=c("unexplained outcome1","explained outcome1","overall outcome1")
wtTD=PB.TD$wtTD
PB.vec.var=PB.TD$var.cs
PB.vec.PctExplained=PB.TD$pctExplain.PB
test.PB<-function(ests,var.ests,n.strat,n.psu){
num.sttt=length(ests)
df.num=sum(n.psu)-n.strat-num.sttt+1
df.denom=(sum(n.psu)-n.strat)*num.sttt
F.PB.vec=df.num/df.denom*ests%*%ginv(var.ests)%*%(ests)
pvalue.vec= 1-pf(F.PB.vec,df1=(num.sttt), df2=df.num)
Fvalue=F.PB.vec;pvalue=pvalue.vec;var=diag(var.ests)
test=cbind(ests,var)
data.frame(test, Fvalue, pvalue)
}
PB.test=c(PB.vec[1:(ngroup.outcome-1),])
test.PB.vec=test.PB(PB.test,PB.vec.var, n.strat, n.psu)
#-------------RESULTS-----------------------------
PB.TD$method
linear=PB.TD$logit.r1
linear
tbl1.vec=cbind(matrix(PB.TD$pct.obs),matrix(PB.TD$pct.est),PB.unexplained=matrix(PB.TD$pct.est)-matrix(PB.TD$pct.obs))
tbl2.vec=rbind(matrix(0,ngroup.outcome-1,3),sapply(1:3, function(ii) c(PB.vec[((ngroup.outcome-1)*(ii-1)+1):((ngroup.outcome-1)*ii),])) )
std.PB=c(rep(0,ngroup.outcome-1),sqrt(diag(PB.vec.var)))
cbind(n.race,tbl1.vec,tbl2.vec,std.PB)
test.PB.vec
rm(list=ls())
library(nnet)
library(survey)
method = 2
wquantile <- function( v, w, p )
{
v <- v[order(v)]
w <- w[order(v)]
v [ which.max( cumsum(w) / sum(w) >= p ) ]
}
###set working directory
#setwd("C:/Users/laffertyrm/Documents/work/PB")
##############################
source("C:/Users/laffertyrm/Documents/work/PB/subfunctions.PB v3 refgrp last 0912.r")
data.examp=read.table(file="C:/Users/laffertyrm/Documents/work/PB/variables_no_missing.txt",header=T)
data.examp0=data.examp
dim(data.examp0)
#reorder data by race
race.recode=data.examp0$race-1
race.recode[which(race.recode==0)]=race.recode[which(race.recode==0)]+3 #considering all three race groups
data.examp0$race=race.recode    ###white, black, hist
data.examp1=data.examp0[order(data.examp0$race),]
#variables
y0=data.examp1$BMXBMI
y=ifelse(y0>=30,1,0)
race.cat=data.examp1$race #race (1=white; 2=black; 3=hispanic)
age=data.examp1$RIDAGEYR
age_square=age*age
pir=data.examp1$INDFMPIR
insurance=data.examp1$HID010
phy.act=data.examp1$mets_sum
alc.consump=data.examp1$num_drk_pwk
smoke2=data.examp1$smoke2
smoke3=data.examp1$smoke3
wt=data.examp1$samplwt
strat=data.examp1$SDMVSTRA
psu= data.examp1$SDMVPSU
xtabs(~strat+psu)
# collapse to have >1 psu's in each stratum (??)
psu[strat==38]=3; strat[strat==38]=37
xtabs(~strat+psu)
n.strat=nlevels(as.factor(strat))
n.psu=sapply(1:n.strat, function(k) nlevels(as.factor(psu[strat==k]))) # num of PSUs within strat
ngroup.outcome=2
n.race=table(race.cat)
ncat.race=nlevels(as.factor(race.cat))
#y.med<-sapply(1:ngroup.outcome, function(j) wquantile(data.examp1$BMXBMI[y==j],wt[y==j],0.5))
#characteristics of covariates
cov.x=cbind(age,age_square,pir,insurance,phy.act,alc.consump,smoke2,smoke3)
boxplot(age~race.cat, col="lightgray",main="Age Distribution by Race",xlab="Race",ylab="Age")
boxplot(phy.act~race.cat, col="lightgray",main="Distribution of total amount of leisure-time physical activity by Race",xlab="Race",ylab="total amount of leisure-time physical activity")
boxplot(pir~race.cat, col="lightgray",main="PIR Distribution by Race",xlab="Race",ylab="PIR")
boxplot(alc.consump~race.cat, col="lightgray",main="Distribution of number of drinks alcohol per week by Race",xlab="Race",ylab="number of drinks alcohol per week")
sapply(1:3, function (i) quantile(phy.act[race.cat==i]))
sapply(1:3, function (i) quantile(alc.consump[race.cat==i]))
xtabs(~race.cat+insurance)
xtabs(~race.cat+smoke2)
xtabs(~race.cat+smoke3)
###############
#Table C.II (linear)
observed.py=matrix(sapply( 1:ncat.race, function (j)
sum(wt[race.cat==j]*y0[race.cat==j])/sum(wt[race.cat==j])
),1,)
colnames(observed.py)=c('white','black','hist')
rownames(observed.py)=c('mean')
##observed mean BMI
observed.py;
##predicted mean
white.data=data.frame(cbind(y0,cov.x,wt,strat,psu)[race.cat==1,])
ds=svydesign(ids=~psu,strata=~strat,data=white.data,weights=~wt,nest=T)
glm.wt=svyglm(y0~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
coeff=summary(glm.wt)$coeff[,1]
#expected BMI for black
out2=as.matrix(cbind(1,cov.x)[race.cat==2,])%*% as.matrix(coeff)
out2.wt=sum(wt[race.cat==2]*out2)/sum(wt[race.cat==2])
#unexplained disparity for black
U2=out2.wt-observed.py[2]
#expected BMI for hispanic
#unexplained disparity for hispanic
out3=as.matrix(cbind(1,cov.x)[race.cat==3,])%*% as.matrix(coeff)
out3.wt=sum(wt[race.cat==3]*out3)/sum(wt[race.cat==3])
U3=out3.wt-observed.py[3]
######################################
# glm.nowt=glm(y0[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],)
summary(glm.wt)$coeff[,1]
################
observed.py=matrix(sapply( 1:ncat.race, function (j)
sum(wt[race.cat==j]*y[race.cat==j])/sum(wt[race.cat==j])
),1,)
colnames(observed.py)=c('white','black','hist')
rownames(observed.py)=c('mean')
overall.PB=observed.py[,1] - observed.py    #observed -observed
observed.py; overall.PB
white.data=data.frame(cbind(y,cov.x,wt,strat,psu)[race.cat==1,])
xtabs(~white.data$strat+white.data$psu)
permut.id=order(white.data$strat,white.data$psu)
white.data=white.data[permut.id,]
ds=svydesign(ids=~psu,strata=~strat,data=white.data,weights=~wt,nest=T)
#######################
#for linear
glm.wt=svyglm(y0~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
glm.nowt=glm(y0[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],)
summary(glm.wt); summary(glm.nowt)
##############
#for binary
glm.wt=svyglm(y~age+age_square+pir+insurance+phy.act+alc.consump+smoke2+smoke3,design=ds)
glm.nowt=glm(y[race.cat==1]~.,data=data.frame(cov.x)[race.cat==1,],weights=wt[race.cat==1],family="binomial")
summary(glm.wt); summary(glm.nowt)
#for binary
PB.TD=PBest.TD.logit(y,y.med=NULL,race.cat,cov.x,strat,psu,wt,method)  #######CODE FAILS HERE --- SEE SUBFUNCTIONS
PB.vec=as.matrix(PB.TD$PB)
rownames(PB.vec)=c("unexplained outcome1","explained outcome1","overall outcome1")
wtTD=PB.TD$wtTD
PB.vec.var=PB.TD$var.cs
PB.vec.PctExplained=PB.TD$pctExplain.PB
test.PB<-function(ests,var.ests,n.strat,n.psu){
num.sttt=length(ests)
df.num=sum(n.psu)-n.strat-num.sttt+1
df.denom=(sum(n.psu)-n.strat)*num.sttt
F.PB.vec=df.num/df.denom*ests%*%ginv(var.ests)%*%(ests)
pvalue.vec= 1-pf(F.PB.vec,df1=(num.sttt), df2=df.num)
Fvalue=F.PB.vec;pvalue=pvalue.vec;var=diag(var.ests)
test=cbind(ests,var)
data.frame(test, Fvalue, pvalue)
}
PB.test=c(PB.vec[1:(ngroup.outcome-1),])
test.PB.vec=test.PB(PB.test,PB.vec.var, n.strat, n.psu)
#-------------RESULTS-----------------------------
PB.TD$method
linear=PB.TD$logit.r1
linear
tbl1.vec=cbind(matrix(PB.TD$pct.obs),matrix(PB.TD$pct.est),PB.unexplained=matrix(PB.TD$pct.est)-matrix(PB.TD$pct.obs))
tbl2.vec=rbind(matrix(0,ngroup.outcome-1,3),sapply(1:3, function(ii) c(PB.vec[((ngroup.outcome-1)*(ii-1)+1):((ngroup.outcome-1)*ii),])) )
std.PB=c(rep(0,ngroup.outcome-1),sqrt(diag(PB.vec.var)))
cbind(n.race,tbl1.vec,tbl2.vec,std.PB)
test.PB.vec
install.packages('devtools')
install.packages('roxygen2')
devtools::create("pbanalysis")
tools::Rd2HTML?
ew0
?tools::Rd2HTML
getwd()
setwd(paste(getwd(),"/work/pb/pbanalysis/man/"))
setwd(paste(getwd(),"/work/pb/pbanalysis/man/"))
paste(getwd(),"/work/pb/pbanalysis/man/")
paste(getwd(),"/work/pb/pbanalysis/man/")
"C:/Users/laffertyrm/Documents/work/pb/pbanalysis/man/"
setwd("C:/Users/laffertyrm/Documents/work/pb/pbanalysis/man/")
parse_Rd("pb.fit.rd")
tools::parse_Rd("pb.fit.rd")
tools::Rd2HTML(tools::parse_Rd("pb.fit.rd"))
